{
  "name": "log",
  "rules": {
    "logs": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_logline"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "_logline": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "log_date"
        },
        {
          "type": "SYMBOL",
          "name": "log_time"
        },
        {
          "type": "SYMBOL",
          "name": "level"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_important"
          }
        }
      ]
    },
    "log_date": {
      "type": "SYMBOL",
      "name": "year_month_date"
    },
    "log_time": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "time_with_offset"
        },
        {
          "type": "SYMBOL",
          "name": "time_without_offset"
        }
      ]
    },
    "year_month_date": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"
          },
          {
            "type": "PATTERN",
            "value": "[ tT]"
          }
        ]
      }
    },
    "time_with_offset": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)([.][0-9]+)?"
          },
          {
            "type": "PATTERN",
            "value": "([zZ])|([+-]([01][0-9]|2[0-3]):[0-5][0-9])"
          }
        ]
      }
    },
    "time_without_offset": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)([.][0-9]+)?"
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": "[^\\n]+"
          },
          {
            "type": "PATTERN",
            "value": "\\r?\\n"
          }
        ]
      }
    },
    "level": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "trace_level"
        },
        {
          "type": "SYMBOL",
          "name": "debug_level"
        },
        {
          "type": "SYMBOL",
          "name": "info_level"
        },
        {
          "type": "SYMBOL",
          "name": "warning_level"
        },
        {
          "type": "SYMBOL",
          "name": "error_level"
        }
      ]
    },
    "trace_level": {
      "type": "PATTERN",
      "value": "(TRACE|Trace|verbose|verb)"
    },
    "debug_level": {
      "type": "PATTERN",
      "value": "(DEBUG|Debug|debug|dbg)"
    },
    "info_level": {
      "type": "PATTERN",
      "value": "(HINT|INFO|INFORMATION|Info|NOTICE|II|info|information)"
    },
    "warning_level": {
      "type": "PATTERN",
      "value": "(WARNING|WARN|WW|warning|warn)"
    },
    "error_level": {
      "type": "PATTERN",
      "value": "(ALERT|CRITICAL|EMERGENCY|ERROR|FAILURE|FAIL|Fatal|FATAL|Error|EE|error|eror|err|fatal)"
    },
    "quoted_string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": 1,
                  "content": {
                    "type": "PATTERN",
                    "value": "[^\"\\n]+"
                  }
                }
              }
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        }
      ]
    },
    "_important": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "constant"
        },
        {
          "type": "SYMBOL",
          "name": "quoted_string"
        }
      ]
    },
    "_uuid": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
        },
        {
          "type": "PATTERN",
          "value": "[0-9a-f]{32}"
        }
      ]
    },
    "_ipv4": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "[:]\\d+"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_ipv4"
        },
        {
          "type": "SYMBOL",
          "name": "_uuid"
        },
        {
          "type": "PATTERN",
          "value": "\\s\\d+"
        },
        {
          "type": "PATTERN",
          "value": "true|false"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

